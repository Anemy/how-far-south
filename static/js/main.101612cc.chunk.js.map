{"version":3,"sources":["components/contact/index.js","components/contact/Contact.js","components/header/Header.js","components/header/index.js","components/home/index.js","components/home/Home.js","router.js","App.js","registerServiceWorker.js","index.js"],"names":["Contact","react_default","a","createElement","className","Component","Header","defaultProps","links","text","url","Home","components_header","AppRouter","Router","history","createBrowserHistory","Switch","Route","path","component","App","router","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","catch","error","ReactDOM","render","src_App_0","document","getElementById","URL","process","origin","addEventListener","concat","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"gYAEeA,0LCIX,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UAAf,gBAHeC,cCEfC,gMAkBF,OAAO,YAlBUD,cAAfC,EAKGC,aAAe,CACpBC,MAAO,CAAC,CACNC,KAAM,QACNC,IAAK,UACJ,CACDD,KAAM,UACNC,IAAK,cA8BIJ,IC7CAA,ED6CAA,EE7CAK,mLCMX,OACEV,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACbH,EAAAC,EAAAC,cAACS,EAAD,MACAX,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cAEfH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,cAAd,QACOH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,eAAhB,KADP,WAGAH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,oBAAd,uBAVWC,aCeJQ,mLAXX,OACEZ,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAQC,QAASC,eACff,EAAAC,EAAAC,cAACc,EAAA,EAAD,KACEhB,EAAAC,EAAAC,cAACe,EAAA,EAAD,CAAOC,KAAK,WAAWC,UAAWpB,IAClCC,EAAAC,EAAAC,cAACe,EAAA,EAAD,CAAOC,KAAK,IAAIC,UAAWT,aANbN,aCSTgB,mLARX,OACEpB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAACmB,EAAD,cAJUjB,aCGZkB,EAAcC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DAsCN,SAASC,EAAgBC,GACvBC,UAAUC,cACPC,SAASH,GACTI,KAAK,SAAAC,GACJA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACtCD,EAAiBE,cAAgB,WACA,cAA3BF,EAAiBG,QACfT,UAAUC,cAAcS,WAK1BC,QAAQC,IAAI,6CAKZD,QAAQC,IAAI,2CAMrBC,MAAM,SAAAC,GACLH,QAAQG,MAAM,4CAA6CA,KCvEjEC,IAASC,OAAO9C,EAAAC,EAAAC,cAAC6C,EAAD,MAASC,SAASC,eAAe,SDYlC,WACb,GAA6C,kBAAmBnB,UAAW,CAGzE,GADkB,IAAIoB,IAAIC,GAAwB3B,OAAOC,UAC3C2B,SAAW5B,OAAOC,SAAS2B,OAIvC,OAGF5B,OAAO6B,iBAAiB,OAAQ,WAC9B,IAAMxB,EAAK,GAAAyB,OAAMH,GAAN,sBAEP7B,GAiDV,SAAiCO,GAE/B0B,MAAM1B,GACHI,KAAK,SAAAuB,GAGkB,MAApBA,EAASC,SACuD,IAAhED,EAASE,QAAQC,IAAI,gBAAgBC,QAAQ,cAG7C9B,UAAUC,cAAc8B,MAAM5B,KAAK,SAAAC,GACjCA,EAAa4B,aAAa7B,KAAK,WAC7BT,OAAOC,SAASsC,aAKpBnC,EAAgBC,KAGnBc,MAAM,WACLF,QAAQC,IACN,mEArEAsB,CAAwBnC,GAIxBC,UAAUC,cAAc8B,MAAM5B,KAAK,WACjCQ,QAAQC,IACN,+GAMJd,EAAgBC,MCvCxBoC","file":"static/js/main.101612cc.chunk.js","sourcesContent":["import Contact from './Contact';\n\nexport default Contact;\nexport { Contact };","import React, { Component } from 'react';\n\nimport './contact.scss';\n\nclass Header extends Component {\n  render() {\n    return (\n      <div className=\"header\">\n        Hello\n      </div>\n    );\n  }\n}\n\nexport default Header;","import PropTypes from 'prop-types';\nimport React, { Component } from 'react';\n// import { Link } from 'react-router-dom';\n\nimport './header.scss';\n\nclass Header extends Component {\n  static propTypes = {\n    links: PropTypes.array\n  }\n\n  static defaultProps = {\n    links: [{\n      text: 'About',\n      url: '/about'\n    }, {\n      text: 'Contact',\n      url: '/contact'\n    }]\n  }\n\n  render() {\n    // const { links } = this.props;\n\n    return null;\n\n    // return (\n    //   <div className=\"nav top-nav\">\n    //     <div className=\"header-title\">\n    //       How Far South <span role=\"img\" aria-label=\"\">ðŸš²</span>\n    //     </div>\n    //     <div className=\"header-links\">\n    //     {links.map(link => (\n    //       <Link\n    //         to={link.url}\n    //         className=\"header-link\"\n    //         key={link.url}\n    //       >\n    //         {link.text}\n    //       </Link>\n    //     ))}\n    //     </div>\n    //   </div>\n    // );\n  }\n}\n\nexport default Header;","import Header from './Header';\n\nexport default Header;\nexport { Header };","import Home from './Home';\n\nexport default Home;\nexport { Home };","import React, { Component } from 'react';\n\nimport './home.scss';\n\nimport Header from '../header';\n\nclass Home extends Component {\n  render() {\n    return (\n      <div className=\"home\">\n        <Header />\n        <div className=\"home-line\" />\n\n        <h1 className=\"home-title\">\n          HOW F<span className=\"home-rotate\">A</span>R SOUTH\n        </h1>\n        <h4 className=\"home-under-title\">\n          COMING SOON\n        </h4>\n      </div>\n    );\n  }\n}\n\nexport default Home;","import React, { Component } from 'react';\nimport { Router, Route, Switch } from 'react-router-dom';\n\nimport { createBrowserHistory } from 'history';\n\nimport Contact from './components/contact';\nimport Home from './components/home';\n\nclass AppRouter extends Component {\n  render() {\n    return (\n      <Router history={createBrowserHistory()}>\n        <Switch>\n          <Route path=\"/contact\" component={Contact} />\n          <Route path=\"/\" component={Home} />\n        </Switch>\n      </Router>\n    );\n  }\n}\n\nexport default AppRouter;","import React, { Component } from 'react';\n\nimport './App.scss';\nimport './grid.css';\n\nimport Router from './router';\n\nclass App extends Component {\n  render() {    \n    return (\n      <div className=\"app\">\n        <Router />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.scss';\n\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nregisterServiceWorker();\n\n\n/**\n * TODO:\n * Title custom font? HOW FAR SOUTH\n * Proxima nova for text? or source sans pro?\n * Plak condensend for headline - 'Plak Black Extra Condensed'\n * Custom caps font over main page load.\n * Topography animation\n * \n * Wheel turning in background?\n * Animate bikes in background?\n * Path coming down in background?\n * Spot onto seattle coming down?\n */"],"sourceRoot":""}