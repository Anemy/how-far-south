{"version":3,"sources":["components/contact/index.js","components/contact/Contact.js","components/header/Header.js","components/header/index.js","components/map/Map.js","components/map/index.js","components/home/index.js","components/home/Home.js","router.js","App.js","registerServiceWorker.js","index.js"],"names":["Contact","react_default","a","createElement","className","Component","Header","defaultProps","links","text","url","kavrayskiy7Raw","lambda","phi","Math","PI","sqrt","invert","x","y","Map","state","width","height","svgRef","getMapDimensions","_this","mapTranslation","console","log","mapWidth","mapHeight","mapScale","buildMap","svg","d3","_this$getMapDimension","attr","selectAll","remove","path","geoProjection","translate","scale","append","data","topojson","topology","objects","customWorld","features","enter","each","d","totalLength","this","getTotalLength","updateWindowDimensions","setState","window","innerWidth","innerHeight","mounted","removeEventListener","addEventListener","_this2","_this$state","ref","Home","components_header","components_map","AppRouter","Router","history","createBrowserHistory","Switch","Route","component","App","router","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","catch","error","ReactDOM","render","src_App_0","document","getElementById","URL","process","origin","concat","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.887e5523.chunk.js","sourcesContent":["import Contact from './Contact';\n\nexport default Contact;\nexport { Contact };","import React, { Component } from 'react';\n\nimport './contact.scss';\n\nclass Header extends Component {\n  render() {\n    return (\n      <div className=\"header\">\n        Hello\n      </div>\n    );\n  }\n}\n\nexport default Header;","import PropTypes from 'prop-types';\nimport React, { Component } from 'react';\n// import { Link } from 'react-router-dom';\n\nimport './header.scss';\n\nclass Header extends Component {\n  static propTypes = {\n    links: PropTypes.array\n  }\n\n  static defaultProps = {\n    links: [{\n      text: 'About',\n      url: '/about'\n    }, {\n      text: 'Contact',\n      url: '/contact'\n    }]\n  }\n\n  render() {\n    // const { links } = this.props;\n\n    return (<div />);\n\n    // return (\n    //   <div className=\"nav top-nav\">\n    //     <div className=\"header-title\">\n    //       How Far South <span role=\"img\" aria-label=\"\">ðŸš²</span>\n    //     </div>\n    //     <div className=\"header-links\">\n    //     {links.map(link => (\n    //       <Link\n    //         to={link.url}\n    //         className=\"header-link\"\n    //         key={link.url}\n    //       >\n    //         {link.text}\n    //       </Link>\n    //     ))}\n    //     </div>\n    //   </div>\n    // );\n  }\n}\n\nexport default Header;","import Header from './Header';\n\nexport default Header;\nexport { Header };","// import d3 from 'd3';\n// import { geoPath } from 'd3-geo';\nimport * as d3 from 'd3';\nimport { geoProjection } from 'd3-geo';\nimport React, { Component } from 'react';\nimport * as topojson from 'topojson-client';\n\nimport './map.scss';\n\n// TODO: Async load.\nimport topology from '../../data/map-data.topo.json';\n\nfunction kavrayskiy7Raw(lambda, phi) {\n  return [3 / (Math.PI * 2) * lambda * Math.sqrt(Math.PI * Math.PI / 3 - phi * phi), phi];\n}\n\nconst kavrayskiy7RawScale = 158.837;\n\nkavrayskiy7Raw.invert = function(x, y) {\n  return [(Math.PI * 2) / 3 * x / Math.sqrt(Math.PI * Math.PI / 3 - y * y), y];\n};\n\nclass Map extends Component {\n  state = {\n    width: 0,\n    height: 0\n  }\n\n  svgRef = null;\n\n  componentWillUnmount() {\n    this.mounted = false;\n    window.removeEventListener('resize', this.updateWindowDimensions);\n  }\n\n  componentWillMount() {\n    this.updateWindowDimensions();\n  }\n\n  componentDidMount() {\n    window.addEventListener('resize', this.updateWindowDimensions);\n    this.mounted = true;\n    this.updateWindowDimensions();\n  }\n\n  getMapDimensions = () => {\n    // We want these spots on the map to scale to the screen.\n    // The scale should be defined by either: It fits into 3 vertical screens (the horizontal just fits easy).\n    // Or is scales fully to the width. (Max width = screen width or max height = screen height * 3).\n\n    const maxWidth = this.state.width;\n\n    // let mapHeight = this.state.height * 2;\n    // let mapWidth = this.state.width;\n\n    const ourScale = 1.2;\n    const mapScale = 700 * ourScale;\n    const mapHeight = 1382 * ourScale;\n    const mapWidth = 765 * ourScale;\n\n    const mapXOffset = 1240 * ourScale;\n    const mapYOffset = 640 * ourScale;\n    const mapTranslation = [mapXOffset, mapYOffset];\n\n    if (this.state.width * (3 / 2) < this.state.height) {\n      console.log('Very vertical screen - scale to fit the width');\n    }\n\n    return { mapWidth, mapHeight, mapTranslation, mapScale };\n  }\n\n  buildMap = () => {\n    const svg = d3.select(this.svgRef);\n\n    const { mapWidth, mapHeight, mapTranslation, mapScale } = this.getMapDimensions();\n\n    svg.attr('width', mapWidth).attr('height', mapHeight);\n\n    // Make sure the svg is cleaned.\n    svg.selectAll('*').remove();\n\n    // Pull in the map boundaries -> project & scale accordingly.\n    const path = d3.geoPath(geoProjection(kavrayskiy7Raw).translate(mapTranslation).scale(mapScale));\n    // const path = d3.geoPath(d3.geoAzimuthalEqualArea().translate(mapTranslation).scale(mapScale))\n\n    svg.append('g')\n      .attr('class', 'map-border')\n      .selectAll('path')\n      .data(topojson.feature(topology, topology.objects.customWorld).features)\n      .enter().append('path')\n      .attr('d', path)\n      .each(function(d) { d.totalLength = this.getTotalLength(); })\n      .attr('stroke-dasharray', function(d) { return d.totalLength + ' ' + d.totalLength; })\n      .attr('stroke-dashoffset', function(d) { return d.totalLength; })\n      // var path = document.querySelector('.path');\n      // var length = path.getTotalLength();\n\n    console.log('built map.');\n  }\n\n  updateWindowDimensions = () => {\n    this.setState({\n      width: window.innerWidth,\n      height: window.innerHeight\n    });\n\n    if (this.mounted) {\n      this.buildMap();\n    }\n  }\n\n  render() {\n    const { width, height } = this.state;\n    \n    return (\n      <div className=\"map\">\n        <svg\n          className=\"map-svg\"\n          ref={ref => this.svgRef = ref}\n        />\n      </div>\n    );\n  }\n}\n\nexport default Map;\n\n// d3.json(mapData, function(error, topology) {\n// if (error) throw error;\n","import Map from './Map';\n\nexport default Map;\nexport { Map };","import Home from './Home';\n\nexport default Home;\nexport { Home };","import React, { Component } from 'react';\n\nimport './home.scss';\n\nimport Header from '../header';\nimport Map from '../map';\n\nclass Home extends Component {\n  render() {\n    return (\n      <div className=\"home\">\n        <Header />\n        {/* <div className=\"home-line\" /> */}\n\n        <h1 className=\"home-title\">\n          HOW F<span className=\"home-rotate\">A</span>R SOUTH\n        </h1>\n        {/* <h4 className=\"home-under-title\">\n          COMING SOON\n        </h4> */}\n        <Map />\n      </div>\n    );\n  }\n}\n\nexport default Home;","import React, { Component } from 'react';\nimport { Router, Route, Switch } from 'react-router-dom';\n\nimport { createBrowserHistory } from 'history';\n\nimport Contact from './components/contact';\nimport Home from './components/home';\n\nclass AppRouter extends Component {\n  render() {\n    return (\n      <Router history={createBrowserHistory()}>\n        <Switch>\n          <Route path=\"/contact\" component={Contact} />\n          <Route path=\"/\" component={Home} />\n        </Switch>\n      </Router>\n    );\n  }\n}\n\nexport default AppRouter;","import React, { Component } from 'react';\n\nimport './App.scss';\nimport './grid.css';\n\nimport Router from './router';\n\nclass App extends Component {\n  render() {    \n    return (\n      <div className=\"app\">\n        <Router />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.scss';\n\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nregisterServiceWorker();\n\n\n/**\n * TODO:\n * Title custom font? HOW FAR SOUTH\n * Proxima nova for text? or source sans pro?\n * Plak condensend for headline - 'Plak Black Extra Condensed'\n * Custom caps font over main page load.\n * Topography animation\n * \n * Wheel turning in background?\n * Animate bikes in background?\n * Path coming down in background?\n * Spot onto seattle coming down?\n */"],"sourceRoot":""}